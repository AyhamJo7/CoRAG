[build-system]
requires = ["setuptools>=65.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "corag"
version = "0.1.0"
description = "Adaptive Multi-Step Retrieval for Complex Queries"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "AyhamJo7", email = "ayham@example.com"}
]
keywords = ["retrieval", "rag", "multi-hop", "question-answering", "nlp"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "numpy>=1.24.0",
    "torch>=2.0.0",
    "transformers>=4.30.0",
    "sentence-transformers>=2.2.0",
    "faiss-cpu>=1.7.4",
    "openai>=1.0.0",
    "anthropic>=0.18.0",
    "tiktoken>=0.5.0",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "python-dotenv>=1.0.0",
    "pyyaml>=6.0",
    "click>=8.1.0",
    "tqdm>=4.65.0",
    "requests>=2.31.0",
    "fastapi>=0.100.0",
    "uvicorn>=0.23.0",
    "datasets>=2.14.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.7.0",
    "ruff>=0.0.280",
    "mypy>=1.4.0",
    "types-requests>=2.31.0",
    "types-PyYAML>=6.0.12",
]

gpu = [
    "faiss-gpu>=1.7.4",
]

[project.urls]
Homepage = "https://github.com/AyhamJo7/CoRAG"
Repository = "https://github.com/AyhamJo7/CoRAG"
Issues = "https://github.com/AyhamJo7/CoRAG/issues"

[project.scripts]
corag-ingest = "corag.cli.ingest:main"
corag-build-index = "corag.cli.build_index:main"
corag-search = "corag.cli.search:main"
corag-answer = "corag.cli.answer:main"
corag-eval = "corag.cli.eval:main"
corag-serve = "corag.cli.serve:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --cov=corag --cov-report=term-missing --cov-report=html"

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/test_*.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
